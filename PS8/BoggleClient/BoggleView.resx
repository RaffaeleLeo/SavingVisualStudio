<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>